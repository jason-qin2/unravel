{"ast":null,"code":"import _slicedToArray from\"/Users/jason/Desktop/unravel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/*global chrome*/import React,{Component,useState,useEffect}from'react';import rp from\"request-promise\";import{Button,Card,CardHeader,CardBody,CardFooter}from'reactstrap';import ErrorPage from\"./ErrorPage\";import MaterialsPage from\"./MaterialsPage\";function WebScrape(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),url=_useState2[0],setUrl=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),materials=_useState4[0],setMaterials=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),numMats=_useState6[0],setNumMats=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),toggle=_useState8[0],setToggle=_useState8[1];useEffect(function(){// use the request-promise library to fetch the HTML from\nchrome.tabs.query({active:true,lastFocusedWindow:true},function(tabs){if(tabs.length>0){console.log(tabs);var _url=tabs[0].url;setUrl(_url);rp(\"http://localhost:8080/\"+_url).then(function(html){var m=[];console.log(html);if(html.includes(\"cotton\")){console.log(\"cotton\");m.push(\"cotton\");}if(html.includes(\"polyester\")){console.log(\"polyester\");m.push(\"polyester\");}if(html.includes(\"wool\")){console.log(\"wool\");m.push(\"wool\");}setMaterials(m);}).catch(function(error){return console.log(\"This page has no materials\");});}});});var updateToggle=function updateToggle(){setToggle(!toggle);window.location.reload(false);};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ErrorPage,null),/*#__PURE__*/React.createElement(MaterialsPage,{materials:materials}));}export default WebScrape;","map":{"version":3,"sources":["/Users/jason/Desktop/unravel/src/components/WebScrape.js"],"names":["React","Component","useState","useEffect","rp","Button","Card","CardHeader","CardBody","CardFooter","ErrorPage","MaterialsPage","WebScrape","url","setUrl","materials","setMaterials","numMats","setNumMats","toggle","setToggle","chrome","tabs","query","active","lastFocusedWindow","length","console","log","_url","then","html","m","includes","push","catch","error","updateToggle","window","location","reload"],"mappings":"mJAAA,iBACA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,CAAoCC,SAApC,KAAoD,OAApD,CACA,MAAOC,CAAAA,EAAP,KAAe,iBAAf,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,UAAvB,CAAmCC,QAAnC,CAA6CC,UAA7C,KAA8D,YAA9D,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CAEA,QAASC,CAAAA,SAAT,EAAqB,eACKV,QAAQ,CAAC,EAAD,CADb,wCACVW,GADU,eACLC,MADK,8BAEiBZ,QAAQ,CAAC,EAAD,CAFzB,yCAEVa,SAFU,eAECC,YAFD,8BAGad,QAAQ,CAAC,CAAD,CAHrB,yCAGVe,OAHU,eAGDC,UAHC,8BAIWhB,QAAQ,CAAC,IAAD,CAJnB,yCAIViB,MAJU,eAIFC,SAJE,eAMjBjB,SAAS,CAAE,UAAM,CACf;AACAkB,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkB,CAACC,MAAM,CAAE,IAAT,CAAeC,iBAAiB,CAAE,IAAlC,CAAlB,CAA2D,SAAAH,IAAI,CAAI,CAC/D,GAAIA,IAAI,CAACI,MAAL,CAAc,CAAlB,CAAqB,CACnBC,OAAO,CAACC,GAAR,CAAYN,IAAZ,EACA,GAAIO,CAAAA,IAAI,CAAGP,IAAI,CAAC,CAAD,CAAJ,CAAQT,GAAnB,CACAC,MAAM,CAACe,IAAD,CAAN,CACAzB,EAAE,CAAC,yBAA2ByB,IAA5B,CAAF,CACKC,IADL,CACU,SAAAC,IAAI,CAAI,CACV,GAAIC,CAAAA,CAAC,CAAG,EAAR,CACAL,OAAO,CAACC,GAAR,CAAYG,IAAZ,EACA,GAAIA,IAAI,CAACE,QAAL,CAAc,QAAd,CAAJ,CAA6B,CACzBN,OAAO,CAACC,GAAR,CAAY,QAAZ,EACAI,CAAC,CAACE,IAAF,CAAO,QAAP,EACH,CACD,GAAIH,IAAI,CAACE,QAAL,CAAc,WAAd,CAAJ,CAAgC,CAC5BN,OAAO,CAACC,GAAR,CAAY,WAAZ,EACAI,CAAC,CAACE,IAAF,CAAO,WAAP,EACH,CACD,GAAIH,IAAI,CAACE,QAAL,CAAc,MAAd,CAAJ,CAA2B,CACvBN,OAAO,CAACC,GAAR,CAAY,MAAZ,EACAI,CAAC,CAACE,IAAF,CAAO,MAAP,EACH,CACDlB,YAAY,CAACgB,CAAD,CAAZ,CACH,CAjBL,EAkBKG,KAlBL,CAkBW,SAAAC,KAAK,QAAIT,CAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAAJ,EAlBhB,EAmBC,CACN,CAzBD,EA0BD,CA5BQ,CAAT,CA8BA,GAAMS,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvBjB,SAAS,CAAC,CAACD,MAAF,CAAT,CACAmB,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB,EACH,CAHD,CAKA,mBACI,4CACI,oBAAC,SAAD,MADJ,cAEI,oBAAC,aAAD,EAAe,SAAS,CAAEzB,SAA1B,EAFJ,CADJ,CAOD,CAED,cAAeH,CAAAA,SAAf","sourcesContent":["/*global chrome*/\nimport React, {Component, useState, useEffect} from 'react';\nimport rp from \"request-promise\";\nimport { Button, Card, CardHeader, CardBody, CardFooter} from 'reactstrap';\nimport ErrorPage from \"./ErrorPage\";\nimport MaterialsPage from \"./MaterialsPage\";\n\nfunction WebScrape() {\n    const [url, setUrl] = useState(\"\");\n    const [materials, setMaterials] = useState([]);\n    const [numMats, setNumMats] = useState(0);\n    const [toggle, setToggle] = useState(true);\n  \n    useEffect (() => {\n      // use the request-promise library to fetch the HTML from\n      chrome.tabs.query({active: true, lastFocusedWindow: true}, tabs => {\n          if (tabs.length > 0) {\n            console.log(tabs);\n            let _url = tabs[0].url;\n            setUrl(_url);\n            rp(\"http://localhost:8080/\" + _url)\n                .then(html => {\n                    var m = [];\n                    console.log(html);\n                    if (html.includes(\"cotton\")) {\n                        console.log(\"cotton\");\n                        m.push(\"cotton\");\n                    }\n                    if (html.includes(\"polyester\")) {\n                        console.log(\"polyester\");\n                        m.push(\"polyester\");\n                    }\n                    if (html.includes(\"wool\")) {\n                        console.log(\"wool\");\n                        m.push(\"wool\");\n                    }\n                    setMaterials(m);\n                })\n                .catch(error => console.log(\"This page has no materials\"))\n            }\n      });\n    })\n\n    const updateToggle = () => {\n        setToggle(!toggle);\n        window.location.reload(false);\n    }\n\n    return (\n        <div>\n            <ErrorPage />\n            <MaterialsPage materials={materials}/>\n        </div>\n        \n    );\n  }\n  \n  export default WebScrape;"]},"metadata":{},"sourceType":"module"}